{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\acszc\\\\mobeyourbody-next\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(25 * 60);\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n  const {\n    0: hasFinished,\n    1: setHasFinished\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time % 60);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    setActive(true);\n  }\n\n  function resetCountdown() {\n    clearInterval(countdownTimeout);\n    setActive(false);\n    setTime(255 * 60);\n  }\n\n  useEffect(() => {\n    if (active && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (active && time === 0) {\n      setHasFinished(true);\n      setActive(false);\n    }\n  }, [active, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CountdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      type: \"button\",\n      className: styles.CountdownButton,\n      children: \"Voc\\xEA terminou um ciclo! Se movimente um pouco! :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: active ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.CountdownButton} ${styles.CountdownButtonActive}`,\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.CountdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/acszc/mobeyourbody-next/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","countdownTimeout","Countdown","time","setTime","active","setActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountdown","resetCountdown","clearInterval","setTimeout","CountdownContainer","CountdownButton","CountdownButtonActive"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAoB;AACvB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,KAAG,EAAJ,CAAhC;AACA,QAAM;AAAA,OAACO,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACS,WAAD;AAAA,OAAcC;AAAd,MAAgCV,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMW,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAC,EAAhB,CAAhB;AACA,QAAMS,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAC,EAAhB,CAAhB;AACA,QAAM,CAACU,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,EAAtC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACH,OAAD,CAAN,CAAgBI,QAAhB,CAAyB,CAAzB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,EAAtC,CAAlC;;AAEA,WAASG,cAAT,GAAyB;AACrBd,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AACD,WAASe,cAAT,GAAyB;AACrBC,IAAAA,aAAa,CAACrB,gBAAD,CAAb;AACAK,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,IAAAA,OAAO,CAAC,MAAI,EAAL,CAAP;AACH;;AACDL,EAAAA,SAAS,CAAE,MAAM;AACb,QAAIM,MAAM,IAAIF,IAAI,GAAG,CAArB,EAAuB;AACnBF,MAAAA,gBAAgB,GAAGsB,UAAU,CAAE,MAAK;AAChCnB,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH,KAJD,MAIO,IAAIE,MAAM,IAAIF,IAAI,KAAK,CAAvB,EAA0B;AAC7BK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH;AACJ,GATQ,EASN,CAACD,MAAD,EAASF,IAAT,CATM,CAAT;AAUA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACwB,kBAAvB;AAAA,8BACA;AAAA,gCACI;AAAA,oBAAOX;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaEZ,WAAW,gBACT;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,IAAI,EAAC,QAAtB;AAA+B,MAAA,SAAS,EAAEP,MAAM,CAACyB,eAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBAKT;AAAA,gBACMpB,MAAM,gBAAI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAG,GAAEL,MAAM,CAACyB,eAAgB,IAAGzB,MAAM,CAAC0B,qBAAsB,EAA3F;AAA8F,QAAA,OAAO,EAAEL,cAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,gBAIR;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAErB,MAAM,CAACyB,eAAxC;AAAyD,QAAA,OAAO,EAAEL,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ,qBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function Countdown(){\r\n    const [time, setTime] = useState(25*60);\r\n    const [active, setActive] = useState(false);\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n    const minutes = Math.floor(time/60);\r\n    const seconds = Math.floor(time%60);\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2,'0').split('');\r\n    const [secondLeft, secondRight] = String(seconds).padStart(2,'0').split('');\r\n\r\n    function startCountdown(){\r\n        setActive(true);\r\n    }\r\n    function resetCountdown(){\r\n        clearInterval(countdownTimeout);\r\n        setActive(false);\r\n        setTime(255*60);\r\n    }\r\n    useEffect( () => {\r\n        if (active && time > 0){\r\n            countdownTimeout = setTimeout (()=> {\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        } else if (active && time === 0) {\r\n            setHasFinished(true);\r\n            setActive(false);\r\n        }\r\n    }, [active, time] )\r\n    return(\r\n        <div>\r\n            <div className={styles.CountdownContainer}>\r\n            <div>\r\n                <span>{minuteLeft}</span>\r\n                <span>{minuteRight}</span>\r\n            </div>\r\n            <span>:</span>\r\n            <div>\r\n                <span>{secondLeft}</span>\r\n                <span>{secondRight}</span>\r\n            </div>\r\n        </div>\r\n\r\n        { hasFinished ? (\r\n            <button disabled type=\"button\" className={styles.CountdownButton}>\r\n                VocÃª terminou um ciclo! Se movimente um pouco! :)\r\n            </button>\r\n        ): (\r\n            <>\r\n                { active ? (<button type=\"button\" className={`${styles.CountdownButton} ${styles.CountdownButtonActive}`} onClick={resetCountdown}>\r\n                    Abandonar ciclo\r\n                </button>\r\n                ) : (\r\n                <button type=\"button\" className={styles.CountdownButton} onClick={startCountdown}>\r\n                Iniciar um ciclo\r\n                </button>)\r\n                }\r\n            </>\r\n        )}\r\n\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}