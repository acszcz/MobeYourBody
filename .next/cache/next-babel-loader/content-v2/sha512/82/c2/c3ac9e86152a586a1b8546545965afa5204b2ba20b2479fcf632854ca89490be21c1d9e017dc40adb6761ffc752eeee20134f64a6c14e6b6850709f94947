{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\acszc\\\\mobeyourbody-next\\\\src\\\\contexts\\\\ContextChallenge.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext } from 'react';\nimport { useState } from 'react';\nimport challenges from '../../challenges.json';\nexport var ContextChallenge = /*#__PURE__*/createContext({});\nexport function ChallengeProvider(_ref) {\n  _s();\n\n  var Children = _ref.Children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      CurrentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      CompletedChallenges = _useState3[0],\n      setCompletedChallenges = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  function LevelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ContextChallenge.Provider, {\n    value: {\n      level: level,\n      CurrentExperience: CurrentExperience,\n      CompletedChallenges: CompletedChallenges,\n      activeChallenge: activeChallenge,\n      LevelUp: LevelUp,\n      startNewChallenge: startNewChallenge\n    },\n    children: Children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengeProvider, \"zZWDq91YfI58kwbVmSYtlSSfXMA=\");\n\n_c = ChallengeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeProvider\");","map":{"version":3,"sources":["C:/Users/acszc/mobeyourbody-next/src/contexts/ContextChallenge.tsx"],"names":["createContext","useState","challenges","ContextChallenge","ChallengeProvider","Children","level","setLevel","CurrentExperience","setCurrentExperience","CompletedChallenges","setCompletedChallenges","activeChallenge","setActiveChallenge","LevelUp","startNewChallenge","randomChallengeIndex","Math","floor","random","length","challenge","resetChallenge"],"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AAsBA,OAAO,IAAMC,gBAAgB,gBAAGH,aAAa,CAAC,EAAD,CAAtC;AAEP,OAAO,SAASI,iBAAT,OAAgE;AAAA;;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;;AAAA,kBACzCJ,QAAQ,CAAC,CAAD,CADiC;AAAA,MAC5DK,KAD4D;AAAA,MACrDC,QADqD;;AAAA,mBAEjBN,QAAQ,CAAC,CAAD,CAFS;AAAA,MAE5DO,iBAF4D;AAAA,MAEzCC,oBAFyC;;AAAA,mBAGbR,QAAQ,CAAC,CAAD,CAHK;AAAA,MAG5DS,mBAH4D;AAAA,MAGvCC,sBAHuC;;AAAA,mBAIrBV,QAAQ,CAAC,IAAD,CAJa;AAAA,MAI5DW,eAJ4D;AAAA,MAI3CC,kBAJ2C;;AAM/D,WAASC,OAAT,GAAkB;AAChBP,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD;;AAED,WAASS,iBAAT,GAA4B;AACxB,QAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBjB,UAAU,CAACkB,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAGnB,UAAU,CAACc,oBAAD,CAA5B;AACAH,IAAAA,kBAAkB,CAACQ,SAAD,CAAlB;AACH;;AACD,WAASC,cAAT,GAAyB;AACrBT,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAEL,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAEP,MAAAA,KAAK,EAALA,KAAF;AAASE,MAAAA,iBAAiB,EAAjBA,iBAAT;AAA4BE,MAAAA,mBAAmB,EAAnBA,mBAA5B;AAAiDE,MAAAA,eAAe,EAAfA,eAAjD;AAAkEE,MAAAA,OAAO,EAAPA,OAAlE;AAA2EC,MAAAA,iBAAiB,EAAjBA;AAA3E,KAAlC;AAAA,cACKV;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAxBeD,iB;;KAAAA,iB","sourcesContent":["import { createContext } from 'react';\r\nimport { useState } from 'react';\r\nimport { ReactNode } from 'react';\r\nimport challenges from '../../challenges.json';\r\n\r\ninterface Challenge{\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface startNewChallengeData{\r\n    level: number;\r\n    CurrentExperience: number;\r\n    CompletedChallenges: number;\r\n    activeChallenge: Challenge;\r\n    LevelUp: () => void;\r\n    startNewChallenge: () => void;\r\n    resetChallenge: () => void;\r\n}\r\n\r\ninterface ChallengeProviderProps{\r\n    Children: ReactNode;\r\n}\r\n\r\nexport const ContextChallenge = createContext({} as startNewChallengeData);\r\n\r\nexport function ChallengeProvider({ Children }: ChallengeProviderProps){\r\n    const [level, setLevel] = useState(1);\r\n    const [CurrentExperience, setCurrentExperience] = useState(0);\r\n    const [CompletedChallenges, setCompletedChallenges] = useState(0);\r\n    const [activeChallenge, setActiveChallenge] = useState(null);            \r\n       \r\n        function LevelUp(){\r\n          setLevel(level+1);\r\n        }\r\n\r\n        function startNewChallenge(){\r\n            const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\r\n            const challenge = challenges[randomChallengeIndex];\r\n            setActiveChallenge(challenge);\r\n        }\r\n        function resetChallenge(){\r\n            setActiveChallenge(null);\r\n        }\r\n\r\n    return(\r\n        <ContextChallenge.Provider value={{ level, CurrentExperience, CompletedChallenges, activeChallenge, LevelUp, startNewChallenge}}>\r\n            {Children}\r\n        </ContextChallenge.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}