{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\acszc\\\\mobeyourbody-next\\\\src\\\\contexts\\\\ContextChallenge.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext } from 'react';\nimport { useState } from 'react';\nexport var ContextChallenge = /*#__PURE__*/createContext({});\nexport function ChallengeProvider(_ref) {\n  _s();\n\n  var Children = _ref.Children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      CurrentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      CompletedChallenges = _useState3[0],\n      setCompletedChallenges = _useState3[1];\n\n  function LevelUp() {\n    setLevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ContextChallenge.Provider, {\n    value: {\n      level: level,\n      LevelUp: LevelUp,\n      CurrentExperience: CurrentExperience,\n      CompletedChallenges: CompletedChallenges\n    },\n    children: Children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengeProvider, \"1tJQKEKyT0xRutnehEg3lJViP/E=\");\n\n_c = ChallengeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeProvider\");","map":{"version":3,"sources":["C:/Users/acszc/mobeyourbody-next/src/contexts/ContextChallenge.tsx"],"names":["createContext","useState","ContextChallenge","ChallengeProvider","Children","level","setLevel","CurrentExperience","setCurrentExperience","CompletedChallenges","setCompletedChallenges","LevelUp"],"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,IAAMC,gBAAgB,gBAAGF,aAAa,CAAC,EAAD,CAAtC;AAMP,OAAO,SAASG,iBAAT,OAAgE;AAAA;;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;;AAAA,kBACzCH,QAAQ,CAAC,CAAD,CADiC;AAAA,MAC5DI,KAD4D;AAAA,MACrDC,QADqD;;AAAA,mBAEjBL,QAAQ,CAAC,CAAD,CAFS;AAAA,MAE5DM,iBAF4D;AAAA,MAEzCC,oBAFyC;;AAAA,mBAGbP,QAAQ,CAAC,CAAD,CAHK;AAAA,MAG5DQ,mBAH4D;AAAA,MAGvCC,sBAHuC;;AAK/D,WAASC,OAAT,GAAkB;AAChBL,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD;;AAEL,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAALA,KAAF;AAASM,MAAAA,OAAO,EAAPA,OAAT;AAAkBJ,MAAAA,iBAAiB,EAAjBA,iBAAlB;AAAqCE,MAAAA,mBAAmB,EAAnBA;AAArC,KAAlC;AAAA,cACKL;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAdeD,iB;;KAAAA,iB","sourcesContent":["import { createContext } from 'react';\r\nimport { useState } from 'react';\r\nimport { ReactNode } from 'react';\r\nexport const ContextChallenge = createContext({});\r\n\r\ninterface ChallengeProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport function ChallengeProvider({ Children }: ChallengeProviderProps){\r\n    const [level, setLevel] = useState(1);\r\n    const [CurrentExperience, setCurrentExperience] = useState(0);\r\n    const [CompletedChallenges, setCompletedChallenges] = useState(0);\r\n\r\n        function LevelUp(){\r\n          setLevel(level+1);\r\n        }\r\n\r\n    return(\r\n        <ContextChallenge.Provider value={{ level, LevelUp, CurrentExperience, CompletedChallenges }}>\r\n            {Children}\r\n        </ContextChallenge.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}