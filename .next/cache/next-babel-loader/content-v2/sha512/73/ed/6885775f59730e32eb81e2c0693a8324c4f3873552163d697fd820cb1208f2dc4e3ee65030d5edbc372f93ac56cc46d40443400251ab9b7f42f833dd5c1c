{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\acszc\\\\mobeyourbody-next\\\\src\\\\contexts\\\\ContextChallenge.tsx\";\nimport { createContext } from 'react';\nimport { useState } from 'react';\nimport challenges from '../../challenges.json';\nexport const ContextChallenge = /*#__PURE__*/createContext({});\nexport function ChallengeProvider({\n  Children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: CurrentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: CompletedChallenges,\n    1: setCompletedChallenges\n  } = useState(0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n\n  function LevelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const challenge = challenges[randomChallengeIndex];\n    const randomChallengeIndex = Math.floor(Math.random() * challenge.length);\n    setActiveChallenge(challenge);\n    return /*#__PURE__*/_jsxDEV(ContextChallenge.Provider, {\n      value: {\n        level,\n        CurrentExperience,\n        CompletedChallenges,\n        activeChallenge,\n        LevelUp,\n        startNewChallenge\n      },\n      children: Children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n}","map":{"version":3,"sources":["C:/Users/acszc/mobeyourbody-next/src/contexts/ContextChallenge.tsx"],"names":["createContext","useState","challenges","ContextChallenge","ChallengeProvider","Children","level","setLevel","CurrentExperience","setCurrentExperience","CompletedChallenges","setCompletedChallenges","activeChallenge","setActiveChallenge","LevelUp","startNewChallenge","challenge","randomChallengeIndex","Math","floor","random","length"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AAqBA,OAAO,MAAMC,gBAAgB,gBAAGH,aAAa,CAAC,EAAD,CAAtC;AAEP,OAAO,SAASI,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAgE;AACnE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,iBAAD;AAAA,OAAoBC;AAApB,MAA4CR,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAA,OAACS,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDV,QAAQ,CAAC,CAAD,CAA9D;AACA,QAAM;AAAA,OAACW,eAAD;AAAA,OAAkBC;AAAlB,MAAwCZ,QAAQ,CAAC,IAAD,CAAtD;;AAEI,WAASa,OAAT,GAAkB;AAChBP,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD;;AAED,WAASS,iBAAT,GAA4B;AACxB,UAAMC,SAAS,GAAGd,UAAU,CAACe,oBAAD,CAA5B;AACA,UAAMA,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,SAAS,CAACK,MAArC,CAA7B;AACAR,IAAAA,kBAAkB,CAACG,SAAD,CAAlB;AAER,wBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,MAAA,KAAK,EAAE;AAAEV,QAAAA,KAAF;AAASE,QAAAA,iBAAT;AAA4BE,QAAAA,mBAA5B;AAAiDE,QAAAA,eAAjD;AAAkEE,QAAAA,OAAlE;AAA2EC,QAAAA;AAA3E,OAAlC;AAAA,gBACKV;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACA","sourcesContent":["import { createContext } from 'react';\r\nimport { useState } from 'react';\r\nimport { ReactNode } from 'react';\r\nimport challenges from '../../challenges.json';\r\n\r\ninterface Challenge{\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface startNewChallengeData{\r\n    level: number;\r\n    CurrentExperience: number;\r\n    CompletedChallenges: number;\r\n    activeChallenge: Challenge;\r\n    LevelUp: () => void;\r\n    startNewChallenge: () => void;\r\n}\r\n\r\ninterface ChallengeProviderProps{\r\n    Children: ReactNode;\r\n}\r\n\r\nexport const ContextChallenge = createContext({} as startNewChallengeData);\r\n\r\nexport function ChallengeProvider({ Children }: ChallengeProviderProps){\r\n    const [level, setLevel] = useState(1);\r\n    const [CurrentExperience, setCurrentExperience] = useState(0);\r\n    const [CompletedChallenges, setCompletedChallenges] = useState(0);\r\n    const [activeChallenge, setActiveChallenge] = useState(null);            \r\n       \r\n        function LevelUp(){\r\n          setLevel(level+1);\r\n        }\r\n\r\n        function startNewChallenge(){\r\n            const challenge = challenges[randomChallengeIndex];\r\n            const randomChallengeIndex = Math.floor(Math.random() * challenge.length);\r\n            setActiveChallenge(challenge);\r\n\r\n    return(\r\n        <ContextChallenge.Provider value={{ level, CurrentExperience, CompletedChallenges, activeChallenge, LevelUp, startNewChallenge}}>\r\n            {Children}\r\n        </ContextChallenge.Provider>\r\n    );\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}