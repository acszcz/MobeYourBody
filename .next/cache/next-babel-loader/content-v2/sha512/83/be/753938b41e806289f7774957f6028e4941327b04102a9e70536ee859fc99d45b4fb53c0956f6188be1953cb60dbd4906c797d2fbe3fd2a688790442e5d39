{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\acszc\\\\mobeyourbody-next\\\\src\\\\contexts\\\\CountdouwnContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { ChallengesContext } from \"./ContextChallenge\";\nexport var CountdownContext = /*#__PURE__*/createContext({});\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n  var countdownTimeout;\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(25 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      isActive: isActive,\n      startCountdown: startCountdown,\n      resetCountdown: resetCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountdownProvider, \"mj5/cnN4jENLd9Ysf8U5sf/QRNY=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["C:/Users/acszc/mobeyourbody-next/src/contexts/CountdouwnContext.tsx"],"names":["createContext","useContext","useEffect","useState","ChallengesContext","CountdownContext","CountdownProvider","children","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","countdownTimeout","startCountdown","resetCountdown","clearTimeout","setTimeout"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,QAA1D,QAA0E,OAA1E;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AAcA,OAAO,IAAMC,gBAAgB,gBAAGL,aAAa,CAAC,EAAD,CAAtC;AAEP,OAAO,SAASM,iBAAT,OAAsC;AAAA;;AAAA,MAAVC,QAAU,QAAVA,QAAU;;AAAA,oBACXN,UAAU,CAACG,iBAAD,CADC;AAAA,MACjCI,iBADiC,eACjCA,iBADiC;;AAAA,kBAEjBL,QAAQ,CAAC,KAAK,EAAN,CAFS;AAAA,MAElCM,IAFkC;AAAA,MAE5BC,OAF4B;;AAAA,mBAGTP,QAAQ,CAAC,KAAD,CAHC;AAAA,MAGlCQ,QAHkC;AAAA,MAGxBC,WAHwB;;AAAA,mBAIHT,QAAQ,CAAC,KAAD,CAJL;AAAA,MAIlCU,WAJkC;AAAA,MAIrBC,cAJqB;;AAKzC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;AACA,MAAIU,gBAAJ;;AAEA,WAASC,cAAT,GAA0B;AACtBR,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,WAASS,cAAT,GAA0B;AACxBC,IAAAA,YAAY,CAACH,gBAAD,CAAZ;AACAP,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,KAAK,EAAN,CAAP;AACD;;AAEDR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACxBU,MAAAA,gBAAgB,GAAGI,UAAU,CAAC,YAAM;AAClCb,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAF4B,EAE1B,IAF0B,CAA7B;AAGD,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,KAAK,CAAzB,EAA4B;AACjCK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,MAAAA,iBAAiB;AAClB;AACF,GAVQ,EAUN,CAACG,QAAD,EAAWF,IAAX,CAVM,CAAT;AAYF,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAACM,MAAAA,OAAO,EAAPA,OAAD;AAAUG,MAAAA,OAAO,EAAPA,OAAV;AAAmBL,MAAAA,WAAW,EAAXA,WAAnB;AAAgCF,MAAAA,QAAQ,EAARA,QAAhC;AAA0CS,MAAAA,cAAc,EAAdA,cAA1C;AAA0DC,MAAAA,cAAc,EAAdA;AAA1D,KAAlC;AAAA,cACKd;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GApCeD,iB;;KAAAA,iB","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\nimport { ChallengesContext } from \"./ContextChallenge\";\r\n\r\ninterface CountdownProviderProps {\r\n    children: ReactNode;\r\n}\r\ninterface CountdownContextData{\r\n    minutes: number;\r\n    seconds: number;\r\n    hasFinished: boolean;\r\n    isActive: boolean;\r\n    startCountdown: () => void;\r\n    resetCountdown: () => void;\r\n}\r\n\r\nexport const CountdownContext = createContext({} as CountdownContextData);\r\n\r\nexport function CountdownProvider({children}){\r\n    const { startNewChallenge } = useContext(ChallengesContext);\r\n    const [time, setTime] = useState(25 * 60);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [hasFinished, setHasFinished] = useState(false);  \r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n    let countdownTimeout: NodeJS.Timeout;\r\n\r\n    function startCountdown() {\r\n        setIsActive(true);\r\n      }\r\n    \r\n      function resetCountdown() {\r\n        clearTimeout(countdownTimeout);\r\n        setIsActive(false);\r\n        setTime(25 * 60);\r\n      }\r\n    \r\n      useEffect(() => {\r\n        if (isActive && time > 0) {\r\n          countdownTimeout = setTimeout(() => {\r\n            setTime(time - 1);\r\n          }, 1000)\r\n        } else if (isActive && time === 0) {\r\n          setHasFinished(true);\r\n          setIsActive(false);\r\n          startNewChallenge();\r\n        }\r\n      }, [isActive, time]);\r\n\r\n    return(\r\n        <CountdownContext.Provider value={{minutes, seconds, hasFinished, isActive, startCountdown, resetCountdown}}>\r\n            {children}\r\n        </CountdownContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}