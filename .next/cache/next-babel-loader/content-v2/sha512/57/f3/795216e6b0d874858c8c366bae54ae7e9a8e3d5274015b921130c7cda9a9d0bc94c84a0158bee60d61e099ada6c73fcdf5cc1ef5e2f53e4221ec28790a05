{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"C:/Users/acszc/mobeyourbody-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\acszc\\\\mobeyourbody-next\\\\src\\\\contexts\\\\ContextChallenge.tsx\",\n    _s = $RefreshSig$();\n\nimport Cookies from 'js-cookie';\nimport { createContext, useState, useEffect } from 'react';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(false),\n      isLevelUpModalOpen = _useState4[0],\n      setIsLevelOpenModal = _useState4[1];\n\n  var _useState5 = useState(null),\n      activeChallenge = _useState5[0],\n      setActiveChallenge = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelOpenModal(true);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio ðŸ¥³', {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      experienceToNextLevel: experienceToNextLevel,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge\n    },\n    children: [children, isLevelUpModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"Dbn/t3Oac8XNHIPaPhkS8vQXhy4=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Users/acszc/mobeyourbody-next/src/contexts/ContextChallenge.tsx"],"names":["Cookies","createContext","useState","useEffect","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","isLevelUpModalOpen","setIsLevelOpenModal","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import Cookies from 'js-cookie';\r\nimport { createContext, useState, ReactNode, useEffect } from 'react';\r\nimport challenges from '../../challenges.json';\r\nimport { LevelUpModal } from '../components/LevelUpModal';\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface ChallengesContextData {\r\n    level: number;\r\n    currentExperience: number;\r\n    experienceToNextLevel: number;\r\n    challengesCompleted: number;\r\n    activeChallenge: Challenge; \r\n    levelUp: () => void;\r\n    startNewChallenge: () => void;\r\n    resetChallenge: () => void;\r\n    completeChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n    level: number;\r\n    currentExperience: number;\r\n    challengesCompleted: number; \r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({children, ...rest}:  ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(rest.level ?? 1);\r\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);\r\n    const [isLevelUpModalOpen, setIsLevelOpenModal] = useState(false);\r\n    const [activeChallenge, setActiveChallenge] = useState(null);\r\n\r\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n\r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Cookies.set('level', String(level));\r\n        Cookies.set('currentExperience', String(currentExperience));\r\n        Cookies.set('challengesCompleted', String(challengesCompleted));\r\n    }, [level, currentExperience, challengesCompleted])\r\n\r\n\r\n\r\n  function levelUp() {\r\n    setLevel(level + 1);\r\n    setIsLevelOpenModal(true);\r\n  }\r\n\r\n  function startNewChallenge() {\r\n      const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\r\n      const challenge = challenges[randomChallengeIndex];\r\n\r\n      setActiveChallenge(challenge);\r\n\r\n      new Audio('/notification.mp3').play();\r\n\r\n      if (Notification.permission === 'granted') {\r\n          new Notification ('Novo desafio ðŸ¥³', {\r\n              body: `Valendo ${challenge.amount}xp!`\r\n          })\r\n      }\r\n  }\r\n\r\n  function resetChallenge() {\r\n      setActiveChallenge(null);\r\n  }\r\n\r\n  function completeChallenge() {\r\n    if (!activeChallenge) {\r\n        return;\r\n    }\r\n\r\n    const { amount } = activeChallenge;\r\n\r\n\r\n    let finalExperience = currentExperience + amount;\r\n\r\n    if (finalExperience >= experienceToNextLevel) {\r\n        finalExperience = finalExperience - experienceToNextLevel;\r\n        levelUp();\r\n    }\r\n\r\n    setCurrentExperience(finalExperience);\r\n    setActiveChallenge(null);\r\n    setChallengesCompleted(challengesCompleted + 1);\r\n  }\r\n\r\n\r\n    return (\r\n        <ChallengesContext.Provider \r\n        value={{ \r\n            level, \r\n            currentExperience,\r\n            experienceToNextLevel, \r\n            challengesCompleted, \r\n            levelUp,\r\n            startNewChallenge,\r\n            activeChallenge,\r\n            resetChallenge,\r\n            completeChallenge,\r\n            }}>\r\n            {children}\r\n           {isLevelUpModalOpen && <LevelUpModal />}\r\n        </ChallengesContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}